{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for registering types from the CG.DependencyInjection library."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for registering types from the CG.DependencyInjection library. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.DependencyInjection.dll Syntax public static class ServiceCollectionExtensions Methods Add(IServiceCollection, Type, ServiceLifetime) This method registers a service type with the specified service lifetime. Declaration public static IServiceCollection Add(this IServiceCollection serviceCollection, Type serviceType, ServiceLifetime serviceLifetime) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. System.Type serviceType The service type to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Add(IServiceCollection, Type, Type, ServiceLifetime) This method registers a service and implementation the specified service lifetime. Declaration public static IServiceCollection Add(this IServiceCollection serviceCollection, Type serviceType, Type implementationType, ServiceLifetime serviceLifetime) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. System.Type serviceType The service type to use for the operation. System.Type implementationType The implementation type to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Add<TService>(IServiceCollection, ServiceLifetime) This method registers a service with the specified service lifetime. Declaration public static IServiceCollection Add<TService>(this IServiceCollection serviceCollection, ServiceLifetime serviceLifetime) where TService : class Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TService The service type to use for the operation. Add<TService>(IServiceCollection, Func<IServiceProvider, TService>, ServiceLifetime) This method registers a factory with the specified service lifetime. Declaration public static IServiceCollection Add<TService>(this IServiceCollection serviceCollection, Func<IServiceProvider, TService> implementationFactory, ServiceLifetime serviceLifetime) where TService : class Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. System.Func < System.IServiceProvider , TService> implementationFactory The implementation factory to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TService The service type to use for the operation. Add<TService, TImplementation>(IServiceCollection, ServiceLifetime) This method registers a service and implementation the specified service lifetime. Declaration public static IServiceCollection Add<TService, TImplementation>(this IServiceCollection serviceCollection, ServiceLifetime serviceLifetime) where TService : class where TImplementation : class, TService Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TService The service type to use for the operation. TImplementation The implementation type to use for the operation. Add<TService, TImplementation>(IServiceCollection, Func<IServiceProvider, TImplementation>, ServiceLifetime) This method registers a factory with the specified service lifetime. Declaration public static IServiceCollection Add<TService, TImplementation>(this IServiceCollection serviceCollection, Func<IServiceProvider, TImplementation> implementationFactory, ServiceLifetime serviceLifetime) where TService : class where TImplementation : class, TService Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. System.Func < System.IServiceProvider , TImplementation> implementationFactory The implementation factory to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. Type Parameters Name Description TService The service type to use for the operation. TImplementation The implementation type to use for the operation. TryAdd(IServiceCollection, Type, ServiceLifetime) This method attempt to register a service type with the specified service lifetime. Declaration public static bool TryAdd(this IServiceCollection serviceCollection, Type serviceType, ServiceLifetime serviceLifetime) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. System.Type serviceType The service type to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description System.Boolean True if the type was registered; false otherwise. TryAdd(IServiceCollection, Type, Type, ServiceLifetime) This method attempt to register a service and implementation the specified service lifetime. Declaration public static bool TryAdd(this IServiceCollection serviceCollection, Type serviceType, Type implementationType, ServiceLifetime serviceLifetime) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. System.Type serviceType The service type to use for the operation. System.Type implementationType The implementation type to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description System.Boolean True if the type was registered; false otherwise. TryAdd<TService>(IServiceCollection, ServiceLifetime) This method attempts to register a service with the specified service lifetime. Declaration public static bool TryAdd<TService>(this IServiceCollection serviceCollection, ServiceLifetime serviceLifetime) where TService : class Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description System.Boolean True if the type was registered; false otherwise. Type Parameters Name Description TService The service type to use for the operation. TryAdd<TService>(IServiceCollection, Func<IServiceProvider, TService>, ServiceLifetime) This method attempt to register a factory with the specified service lifetime. Declaration public static bool TryAdd<TService>(this IServiceCollection serviceCollection, Func<IServiceProvider, TService> implementationFactory, ServiceLifetime serviceLifetime) where TService : class Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. System.Func < System.IServiceProvider , TService> implementationFactory The implementation factory to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description System.Boolean True if the factory was registered; false otherwise. Type Parameters Name Description TService The service type to use for the operation. TryAdd<TService, TImplementation>(IServiceCollection, ServiceLifetime) This method attempt to register a service and implementation the specified service lifetime. Declaration public static bool TryAdd<TService, TImplementation>(this IServiceCollection serviceCollection, ServiceLifetime serviceLifetime) where TService : class where TImplementation : class, TService Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description System.Boolean True if the type was registered; false otherwise. Type Parameters Name Description TService The service type to use for the operation. TImplementation The implementation type to use for the operation. TryAdd<TService, TImplementation>(IServiceCollection, Func<IServiceProvider, TImplementation>, ServiceLifetime) This method attempts to register a factory with the specified service lifetime. Declaration public static bool TryAdd<TService, TImplementation>(this IServiceCollection serviceCollection, Func<IServiceProvider, TImplementation> implementationFactory, ServiceLifetime serviceLifetime) where TService : class where TImplementation : class, TService Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. System.Func < System.IServiceProvider , TImplementation> implementationFactory The implementation factory to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description System.Boolean True if the factory was registered; false otherwise. Type Parameters Name Description TService The service type to use for the operation. TImplementation The implementation type to use for the operation. TryAddSingleton<TService, TImplementation>(IServiceCollection, TImplementation) This method adds a singleton service of the type specified in TService with an instance specified in the instance parameter, to the specified Microsoft.Extensions.DependencyInjection.IServiceCollection object. Declaration public static bool TryAddSingleton<TService, TImplementation>(this IServiceCollection serviceCollection, TImplementation instance) where TService : class where TImplementation : class, TService Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. TImplementation instance The implementation instance to use for the operation. Returns Type Description System.Boolean True if the type was registered successfully; false otherwise. Type Parameters Name Description TService The type of service to register. TImplementation The type of implementation to use."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.DependencyInjection.dll contains dependency injection extensions used by other CodeGator projects."
  }
}